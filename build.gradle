buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.publish apply false
    alias libs.plugins.api.validator
    alias libs.plugins.detekt
}

apiValidation {
    ignoredProjects += ["app"]
}

def projectSource = file(projectDir)
def configFile = files("$rootDir/detekt/config.yml")
def baselineFile = file("$rootDir/detekt/baseline.xml")
def kotlinFiles = "**/*.kt"
def appModuleFiles = "**/app/**"
def resourceFiles = "**/resources/**"
def buildFiles = "**/build/**"

tasks.register("detektAll", io.gitlab.arturbosch.detekt.Detekt) {
    def autoFix = project.hasProperty('detektAutoFix')

    description = "Custom DETEKT task for all modules"
    parallel = true
    ignoreFailures = false
    autoCorrect = autoFix
    buildUponDefaultConfig = true
    setSource(projectSource)
    config.setFrom(configFile)
    baseline.set(baselineFile)
    include(kotlinFiles)
    exclude(appModuleFiles, resourceFiles, buildFiles)
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false
    }
}

tasks.register("detektGenerateBaseline", io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
    description = "Custom DETEKT task to build baseline for all modules"
    parallel = true
    ignoreFailures = false
    buildUponDefaultConfig = true
    setSource(projectSource)
    baseline.set(baselineFile)
    config.setFrom(configFile)
    include(kotlinFiles)
    exclude(appModuleFiles, resourceFiles, buildFiles)
}

dependencies {
    detektPlugins libs.detekt.formatting
}